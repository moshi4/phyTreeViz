[tool.poetry]
name = "phytreeviz"
version = "0.1.0"
description = "Simple phylogenetic tree visualization python package"
authors = ["moshi4"]
license = "MIT"
repository = "https://github.com/moshi4/phyTreeViz/"
readme = "README.md"
keywords = [
    "bioinformatics",
    "phylogenetics",
    "visualization",
    "matplotlib",
    "phylogenetic-tree",
]
classifiers = [
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Framework :: Matplotlib",
]
include = ["tests"]
packages = [{ include = "phytreeviz", from = "src" }]

[tool.poetry.scripts]
phytreeviz = "phytreeviz.scripts:cli.main"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov=src --tb=line --cov-report=xml --cov-report=term"
testpaths = ["tests"]

[tool.ruff]
src = ["src", "tests"]
line-length = 88

# Lint Rules: https://docs.astral.sh/ruff/rules/
[tool.ruff.lint]
select = [
    "F", # pyflakes
    "E", # pycodestyle (Error)
    "W", # pycodestyle (Warning)
    "I", # isort
    "D", # pydocstyle
]
ignore = [
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D205", # 1 blank line required between summary line and description
    "D400", # First line should end with a period
    "D401", # First line should be in imperative mood
    "D403", # First word of the first line should be properly capitalized
    "D415", # First line should end with a period, question mark, or exclamation point
]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.poetry.dependencies]
python = "^3.8"
matplotlib = ">=3.5.3"
biopython = ">=1.7.9"
numpy = ">=1.21.1"

[tool.poetry.group.dev.dependencies]
ruff = ">=0.1.6"
pytest = ">=7.1.2"
pytest-cov = ">=4.0.0"
ipykernel = ">=6.13.0"

[tool.poetry.group.docs.dependencies]
mkdocs = ">=1.2"
mkdocstrings = { extras = ["python"], version = ">=0.19.0" }
mkdocs-jupyter = ">=0.21.0"
mkdocs-material = ">=8.2"
black = ">=22.10.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
